name: CI pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: 1.1.4
    - name: Install dependencies
      run: poetry install
    - name: Test
      run: |
       poetry run pytest
       poetry run coverage run --branch --source mlaide -m pytest
       poetry run coverage xml
    - name: Archive code coverage results
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: coverage.xml
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2.1.0
      with:
        poetry-version: 1.1.4
    - name: Retrieve version
      uses: paulhatch/semantic-version@v4
      id: set-version
      with:
        tag_prefix: v
        major_pattern: (MAJOR)
        minor_pattern: (MINOR)
        format: "${major}.${minor}.${patch}-dev.{increment}"
        short_tags: false
    - name: Install dependencies
      run: poetry install
    - name: Set version
      run: poetry version "${{ steps.set-version.version }}"
    - name: Build Python Wheel
      run: poetry build
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist
  sonar-scan:
    runs-on: ubuntu-latest
    needs:
      - test
      - build
    steps:
    - uses: actions/checkout@v2
    - name: Download coverage result
      uses: actions/download-artifact@v2
      with:
        name: code-coverage-report
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
